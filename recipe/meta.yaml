{% set name = "PySpice" %}
{% set version = "1.4.2" %}
{% set sha256 = "e8f8dfff36d1c79791dc9d951b32195cf5134b34593ab81d324c195c6428cc82" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/FabriceSalvaire/PySpice/archive/v{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 1
  script:
    # Create __init__.py this way instead of running tasks.release.update_git_sha(),
    # which doesn't work because we're not using a git repo.
    - sed -i.bak s/@VERSION@/{{ version }}/g PySpice/__init__.py.in
    - sed -i.bak s/@GIT_TAG@/v{{ version }}/g PySpice/__init__.py.in
    - sed -i.bak s/@GIT_SHA@/UNSPECIFIED/g PySpice/__init__.py.in
    - rm PySpice/__init__.py.in.bak
    - mv PySpice/__init__.py.in PySpice/__init__.py
    - {{ PYTHON }} -m pip install . -vv

requirements:
  host:
    - python
    - pip
  run:
    - python
    - pyyaml
    - cffi
    - numpy
    - scipy
    - matplotlib-base
    - ply
    - ngspice-lib

test:
  imports:
    - PySpice
    - PySpice.Config
    - PySpice.Doc
    - PySpice.Logging
    - PySpice.Math
    - PySpice.Physics
    - PySpice.Plot
    - PySpice.Probe
    - PySpice.Spice
    - PySpice.Tools
    - PySpice.Unit
  requires:
    - pytest
  source_files:
    - unit-test
  commands:
    - pytest unit-test

about:
  home: https://pyspice.fabrice-salvaire.fr
  doc_url: https://pyspice.fabrice-salvaire.fr
  dev_url: https://github.com/FabriceSalvaire/PySpice

  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE.txt

  summary: Simulate electronic circuit using Python and the Ngspice / Xyce simulators
  description: |
    PySpice is a free and open source Python module which interfaces Python to
    the Ngspice and Xyce circuit simulators. PySpice implements a Ngspice
    binding and provides an oriented object API on top of SPICE, the simulation
    output is converted to Numpy arrays for convenience.

extra:
  recipe-maintainers:
    - FabriceSalvaire
    - stuarteberg
